%% name = UpdateParser

%% {
  #require "#{File.dirname(__FILE__)}/../models/user"
  
	def initialize(str, debug=false)
    setup_parser(str, debug)
		@tags = []
		@processed = ""
	end

  def valid_user(userame)
    !User.first(:username => username).nil?
  end
  
  attr_accessor :tags
  attr_accessor :processed
}

single_at = "# "
single_pound = "@ "
allowed_chars = < /[A-Za-z0-9.,\-&^%$?!~`+= ]/ > { text }
allowed = < (single_at | single_pound | allowed)+ > { text }
url = < /(http[s]?:\/\/\S+[a-zA-Z0-9\/}])/ > { "<a href='#{text}'>#{text}</a>" }
allowed_username_chars = < /[A-Za-z0-9\-_$.+!*]/ > { text }
allowed_username_ending = < /[A-Za-z0-9\-_$.+*]/ > { text }

known_username =  allowed_username_chars:u* allowed_username_ending:e &{ valid_user("#{u}#{e}") }
unknown_username = allowed_username_chars:u* allowed_username_ending:e { "#{u}#{e}" }

username = "@" known_username:u { "<a href='/users/#{u}'>@#{u}</a>" }
         | "@" unknown_username:u { "@#{u}" }

tag_name = allowed:a { @tags << a; a }
tag = "#" tag_name:t { "<a href='/hashtags/#{t}'>##{t}</a>" }

update = tag:t update:u { "#{t}#{u}" }
       | username:n update:u { "#{n}#{u}" }
       # | url:url update:u { "#{url}#{u}" }
       | allowed:a update:u { "#{a}#{u}" }
       # | url:u { u }
       | username:u { u }
       | tag:t { t }
       | allowed:a { a }

root = update:u { @processed = u }
